{"version":3,"sources":["services/env.js","services/AdminServices.js","components/landingPage/login.jsx","components/landingPage/welcome.jsx","components/internalpages/dashbord.jsx","services/nutritionServices.js","components/internalpages/nutritionManagement/addNutrition.jsx","components/internalpages/mainLayout.jsx","components/App.jsx","index.js"],"names":["jwtSectetKey","adminLogin","data","console","log","Axios","post","SaveInLocalStorage","a","async","stringiy","JSON","stringify","localStorage","setItem","isLoggedIn","getItem","adminString","adminJson","parse","jwt","verify","token","id","user","_id","adminLogout","removeItem","Toast","withReactContent","Swal","mixin","toast","position","showConfirmButton","timer","Login","props","handleChange","e","name","target","value","setState","handleSubmit","submitting","state","email","password","then","res","history","push","catch","err","response","fire","type","title","this","className","Container","Row","Col","md","style","transform","top","Card","Header","Body","Form","onSubmit","Group","Label","Control","placeholder","onChange","Button","onClick","disabled","Component","Welcome","React","addNutritionData","AddNutrition","useState","setSubmitting","setName","setType","quantity","setQuantity","array","setArray","calories","setCalories","totalFat","setTotalfFat","saturatedFat","setSaturatedFat","polyUnsaturatedFat","setPolyUnsaturatedFat","monoUnsaturatedFat","setMonoUnsaturatedFat","cholesterol","setCholesterol","sodium","setSodium","potassium","setPotassium","carbohydrate","setCarbohydrate","carbohydrateFromDietaryFiber","setCarbohydrateFromDietaryFiber","carbohydrateFromSugar","setCarbohydrateFromSugar","protein","setProtein","vitaminA","setVitaminA","vitaminB6","setVitaminB6","vitaminC","setVitaminC","vitaminD","setVitaminD","iron","setIron","cobalamin","setCobalamin","calcium","setCalcium","magnesium","setMagnesium","padding","flexDirection","display","map","resp","index","width","height","border","marginTop","justifyContent","key","fontSize","marginLeft","margin","borderRadius","variant","filter","val","preventDefault","length","status","error","message","Layout","handleLogout","handleOpen","open","handleClose","privileges","path","location","pathname","fluid","href","lineHeight","aria-current","to","varient","match","component","PrivateRoute","rest","render","App","exact","MainLayout","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5b7fd98b.chunk.js","sourcesContent":["const jwtSectetKey = () => {\r\n    const JWT_SECRET_KEY = \"mdniajsndknasiojdnkljadiomdsaj@klcmkasmckl\";\r\n    return JWT_SECRET_KEY;\r\n};\r\nexport default jwtSectetKey;","import Axios from \"axios\";\r\nimport jwtSectetKey from \"./env\";\r\nimport jwt from \"jsonwebtoken\";\r\nconst url = \"https://nutrition-api-node.herokuapp.com\";\r\n\r\nexport const adminLogin = (data) => {\r\n  console.log(data);\r\n  return Axios.post(`${url}/admin/LoginAdmin`, data);\r\n};\r\nexport const SaveInLocalStorage = async (data) => {\r\n  const stringiy = JSON.stringify(data);\r\n  await localStorage.setItem(\"productAdmin\", stringiy);\r\n};\r\nexport const isLoggedIn = () => {\r\n  if (localStorage.getItem(\"productAdmin\")) {\r\n    const adminString = localStorage.getItem(\"productAdmin\");\r\n    //console.log(\"user string\", adminString);\r\n    const adminJson = JSON.parse(adminString);\r\n    //console.log(\"json admin\", adminJson.token);\r\n    //console.log(\"token\", jwtSectetKey());\r\n    const decode = jwt.verify(adminJson.token, jwtSectetKey());\r\n    //console.log(\"decode\", decode);\r\n    //console.log(\"storeed id\", adminJson.user._id);\r\n    //console.log(decode.id, \"==\", adminJson.user._id);\r\n    if (decode.id === adminJson.user._id) {\r\n      //console.log(\"true\");\r\n      return adminJson;\r\n    }\r\n  }\r\n\r\n  console.log(\"false\");\r\n  return false;\r\n};\r\nexport const adminLogout = async () => {\r\n  await localStorage.removeItem(\"productAdmin\");\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport {\r\n  adminLogin,\r\n  SaveInLocalStorage,\r\n  isLoggedIn,\r\n} from \"../../services/AdminServices\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst Toast = MySwal.mixin({\r\n  toast: true,\r\n  position: \"top-end\",\r\n  showConfirmButton: false,\r\n  timer: 3000,\r\n});\r\n\r\nexport class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      submitting: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (isLoggedIn()) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = () => {\r\n    this.setState({\r\n      submitting: true,\r\n    });\r\n    const { email, password } = this.state;\r\n    const data = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    adminLogin(data)\r\n      .then((res) => {\r\n        console.log(\"res==============>>>>>>>>>>>\", res);\r\n        const data = res.data;\r\n        SaveInLocalStorage(data);\r\n        this.props.history.push(\"/dashboard\");\r\n        this.setState({\r\n          submitting: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        console.log(\"error==========>>>>>>>\", err);\r\n        this.setState({\r\n          submitting: false,\r\n        });\r\n        Toast.fire({\r\n          type: \"error\",\r\n          title: \"error\",\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className='login-container'>\r\n        <Container>\r\n          <Row className='justify-content-center '>\r\n            <Col\r\n              md='5'\r\n              style={{\r\n                transform: \"translateY(-50%)\",\r\n                top: \"50%\",\r\n                position: \"absolute\",\r\n              }}>\r\n              <Card>\r\n                <Card.Header>\r\n                  <h3 className='text-primary text-center'>Admin Login</h3>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group>\r\n                      <Form.Label>\r\n                        <b>Email::</b>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        type='text'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                      <Form.Label>\r\n                        <b>Password:</b>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                      <Button\r\n                        onClick={this.handleSubmit}\r\n                        disabled={this.state.submitting}>\r\n                        {this.state.submitting ? \"Signing in ...\" : \"Singin\"}\r\n                      </Button>\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { isLoggedIn } from \"../../services/AdminServices\";\r\nclass Welcome extends React.Component {\r\n  componentDidMount() {\r\n    console.log(isLoggedIn());\r\n    if (isLoggedIn()) {\r\n      console.log(\"logged in successfull\");\r\n      this.props.history.push(\"/dashboard\");\r\n    } else {\r\n      this.props.history.push(\"/login\");\r\n      console.log(\"logged in fail\");\r\n    }\r\n  }\r\n  render() {\r\n    return <div> Loading... </div>;\r\n  }\r\n}\r\nexport default Welcome;\r\n","import React from \"react\";\r\nclass Dashboard extends React.Component {\r\n  render() {\r\n    return <div>dashboard</div>;\r\n  }\r\n}\r\nexport default Dashboard;\r\n","import Axios from \"axios\";\r\nexport const addNutritionData = (data) => {\r\n  return Axios.post(\r\n    \"https://nutrition-api-node.herokuapp.com/nutrition/nutritionData\",\r\n    data\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Card } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { addNutritionData } from \"../../../services/nutritionServices\";\r\n\r\nexport default function AddNutrition() {\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [array, setArray] = useState([]);\r\n  const [calories, setCalories] = useState(\"\");\r\n  const [totalFat, setTotalfFat] = useState(\"\");\r\n  const [saturatedFat, setSaturatedFat] = useState(\"\");\r\n  const [polyUnsaturatedFat, setPolyUnsaturatedFat] = useState(\"\");\r\n  const [monoUnsaturatedFat, setMonoUnsaturatedFat] = useState(\"\");\r\n  const [cholesterol, setCholesterol] = useState(\"\");\r\n  const [sodium, setSodium] = useState(\"\");\r\n  const [potassium, setPotassium] = useState(\"\");\r\n  const [carbohydrate, setCarbohydrate] = useState(\"\");\r\n  const [\r\n    carbohydrateFromDietaryFiber,\r\n    setCarbohydrateFromDietaryFiber,\r\n  ] = useState(\"\");\r\n  const [carbohydrateFromSugar, setCarbohydrateFromSugar] = useState(\"\");\r\n  const [protein, setProtein] = useState(\"\");\r\n  const [vitaminA, setVitaminA] = useState(\"\");\r\n  const [vitaminB6, setVitaminB6] = useState(\"\");\r\n  const [vitaminC, setVitaminC] = useState(\"\");\r\n  const [vitaminD, setVitaminD] = useState(\"\");\r\n  const [iron, setIron] = useState(\"\");\r\n  const [cobalamin, setCobalamin] = useState(\"\");\r\n  const [calcium, setCalcium] = useState(\"\");\r\n  const [magnesium, setMagnesium] = useState(\"\");\r\n\r\n  const MySwal = withReactContent(Swal);\r\n  const Toast = MySwal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n    if (array.length === 0) {\r\n      {\r\n        setSubmitting(false);\r\n        Toast.fire({\r\n          type: \"error\",\r\n          title: \"Please Enter Quantities\",\r\n        });\r\n      }\r\n    } else {\r\n      if (\r\n        (name &&\r\n          type &&\r\n          quantity &&\r\n          calories &&\r\n          totalFat &&\r\n          saturatedFat &&\r\n          polyUnsaturatedFat &&\r\n          monoUnsaturatedFat &&\r\n          cholesterol &&\r\n          sodium &&\r\n          potassium &&\r\n          carbohydrate &&\r\n          carbohydrateFromDietaryFiber &&\r\n          carbohydrateFromSugar &&\r\n          protein &&\r\n          vitaminA &&\r\n          vitaminB6 &&\r\n          vitaminC &&\r\n          vitaminD &&\r\n          iron &&\r\n          cobalamin &&\r\n          calcium &&\r\n          magnesium) !== \"\"\r\n      ) {\r\n        const data = {\r\n          name,\r\n          type,\r\n          quantity: array,\r\n          calories,\r\n          totalFat,\r\n          saturatedFat,\r\n          polyUnsaturatedFat,\r\n          monoUnsaturatedFat,\r\n          cholesterol,\r\n          sodium,\r\n          potassium,\r\n          carbohydrate,\r\n          carbohydrateFromDietaryFiber,\r\n          carbohydrateFromSugar,\r\n          protein,\r\n          vitaminA,\r\n          vitaminB6,\r\n          vitaminC,\r\n          vitaminD,\r\n          iron,\r\n          cobalamin,\r\n          calcium,\r\n          magnesium,\r\n        };\r\n\r\n        addNutritionData(data)\r\n          .then((res) => {\r\n            console.log(\"resdata============>>>>>>\", res);\r\n            if (res.data.status === 200) {\r\n              setName(\"\");\r\n              setType(\"\");\r\n              setQuantity(\"\");\r\n              setArray([]);\r\n              setCalories(\"\");\r\n              setTotalfFat(\"\");\r\n              setSaturatedFat(\"\");\r\n              setPolyUnsaturatedFat(\"\");\r\n              setMonoUnsaturatedFat(\"\");\r\n              setCholesterol(\"\");\r\n              setSodium(\"\");\r\n              setPotassium(\"\");\r\n              setCarbohydrate(\"\");\r\n              setCarbohydrateFromDietaryFiber(\"\");\r\n              setCarbohydrateFromSugar(\"\");\r\n              setProtein(\"\");\r\n              setVitaminA(\"\");\r\n              setVitaminB6(\"\");\r\n              setVitaminC(\"\");\r\n              setVitaminD(\"\");\r\n              setIron(\"\");\r\n              setCobalamin(\"\");\r\n              setCalcium(\"\");\r\n              setMagnesium(\"\");\r\n              setSubmitting(false);\r\n              Toast.fire({\r\n                type: \"success\",\r\n                title: \"Your Data Entered Successfully!\",\r\n              });\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            setSubmitting(false);\r\n            console.log(\"err=======>>>>>>>\", err.response);\r\n            Toast.fire({\r\n              type: \"error\",\r\n              title: err.response.data.error.message,\r\n            });\r\n          });\r\n      } else {\r\n        setSubmitting(false);\r\n        Toast.fire({\r\n          type: \"error\",\r\n          title: \"Please Enter All Data\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"10%\" }}>\r\n      <Card style={{ padding: \"5%\" }}>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Name:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Name'\r\n              name='name'\r\n              onChange={(e) => setName(e.target.value)}\r\n              value={name}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Type:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter type'\r\n              name='type'\r\n              onChange={(e) => setType(e.target.value)}\r\n              value={type}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Quantity:</Form.Label>\r\n            <div style={{ flexDirection: \"column\", display: \"flex\" }}>\r\n              {array !== []\r\n                ? array.map((resp, index) => {\r\n                    return (\r\n                      <div\r\n                        style={{\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                          border: \"1px solid #28a745\",\r\n                          marginTop: \"10px\",\r\n                          justifyContent: \"space-between\",\r\n                          display: \"flex\",\r\n                        }}\r\n                        key={index}>\r\n                        <font\r\n                          style={{\r\n                            fontSize: 20,\r\n                            marginLeft: \"5px\",\r\n                          }}>\r\n                          {resp.quantity}\r\n                        </font>\r\n                        <Button\r\n                          style={{\r\n                            margin: \"5px\",\r\n                            borderRadius: \"360px\",\r\n                          }}\r\n                          variant='danger'\r\n                          onClick={() => {\r\n                            setArray(\r\n                              array.filter((val) => {\r\n                                return val !== resp;\r\n                              })\r\n                            );\r\n                          }}>\r\n                          X\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n                  })\r\n                : \"\"}\r\n            </div>\r\n            {console.log(array)}\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter quantity'\r\n              name='quantity'\r\n              onChange={(e) => setQuantity(e.target.value)}\r\n              style={{ marginTop: \"5px\" }}\r\n              value={quantity}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Button\r\n              title='text'\r\n              onClick={() => {\r\n                // array.push(quantity);\r\n                setArray([...array, { quantity }]);\r\n                //setArray(array.concat(quantity));\r\n              }}>\r\n              Add\r\n            </Button>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>calories:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Calories'\r\n              name='calories'\r\n              onChange={(e) => setCalories(e.target.value)}\r\n              value={calories}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Total Fat:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Total fat'\r\n              name='totalFat'\r\n              onChange={(e) => setTotalfFat(e.target.value)}\r\n              value={totalFat}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Saturated Fat:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Saturated Fat'\r\n              name='saturatedFat'\r\n              onChange={(e) => setSaturatedFat(e.target.value)}\r\n              value={saturatedFat}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>PolyUnsaturated Fat:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter polyUnsaturated Fat'\r\n              name='polyUnsaturatedFat'\r\n              onChange={(e) => setPolyUnsaturatedFat(e.target.value)}\r\n              value={polyUnsaturatedFat}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>MonoUnsaturated Fat:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter MonoUnsaturated Fat'\r\n              name='monoUnsaturatedFat'\r\n              onChange={(e) => setMonoUnsaturatedFat(e.target.value)}\r\n              value={monoUnsaturatedFat}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Cholesterol:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Cholesterol'\r\n              name='cholesterol'\r\n              onChange={(e) => setCholesterol(e.target.value)}\r\n              value={cholesterol}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Sodium:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Sodium'\r\n              name='sodium'\r\n              onChange={(e) => setSodium(e.target.value)}\r\n              value={sodium}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Potassium:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Potassium'\r\n              name='potassium'\r\n              onChange={(e) => setPotassium(e.target.value)}\r\n              value={potassium}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Carbohydrate:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Carbohydrate'\r\n              name='carbohydrate'\r\n              onChange={(e) => setCarbohydrate(e.target.value)}\r\n              value={carbohydrate}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Carbohydrate From Dietary Fiber:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Carbohydrate From Dietary Fiber'\r\n              name='carbohydrateFromDietaryFiber'\r\n              onChange={(e) => setCarbohydrateFromDietaryFiber(e.target.value)}\r\n              value={carbohydrateFromDietaryFiber}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Carbohydrate From Sugar:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Carbohydrate From Dietary Sugar'\r\n              name='carbohydrateFromDietarySugar'\r\n              onChange={(e) => setCarbohydrateFromSugar(e.target.value)}\r\n              value={carbohydrateFromSugar}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Protein:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Protein'\r\n              name='protein'\r\n              onChange={(e) => setProtein(e.target.value)}\r\n              value={protein}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Vitamin A:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Vitamin A'\r\n              name='vitaminA'\r\n              onChange={(e) => setVitaminA(e.target.value)}\r\n              value={vitaminA}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Vitamin B-6:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Vitamin B-6'\r\n              name='vitaminB6'\r\n              onChange={(e) => setVitaminB6(e.target.value)}\r\n              value={vitaminB6}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Vitamin C:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Vitamin C'\r\n              name='vitaminC'\r\n              onChange={(e) => setVitaminC(e.target.value)}\r\n              value={vitaminC}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Vitamin D:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Vitamin D'\r\n              name='vitaminD'\r\n              onChange={(e) => setVitaminD(e.target.value)}\r\n              value={vitaminD}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Iron:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Iron'\r\n              name='iron'\r\n              onChange={(e) => setIron(e.target.value)}\r\n              value={iron}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Cobalamin:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Cobalamin'\r\n              name='cobalamin'\r\n              onChange={(e) => setCobalamin(e.target.value)}\r\n              value={cobalamin}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Calcium:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Calcium'\r\n              name='calcium'\r\n              onChange={(e) => setCalcium(e.target.value)}\r\n              value={calcium}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Magnesium:</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Magnesium'\r\n              name='magnesium'\r\n              onChange={(e) => setMagnesium(e.target.value)}\r\n              value={magnesium}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant='primary' type='submit' onClick={handleSubmit}>\r\n            {submitting ? <div>Submitting...</div> : <div>Submit</div>}\r\n          </Button>\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./dashbord\";\r\nimport { Container, Row, Button } from \"react-bootstrap\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport { adminLogout, isLoggedIn } from \"../../services/AdminServices\";\r\nimport AddNutrition from \"./nutritionManagement/addNutrition\";\r\nexport class Layout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      privileges: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!isLoggedIn()) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  handleLogout = () => {\r\n    adminLogout();\r\n    this.props.history.push(\"/login\");\r\n  };\r\n\r\n  handleOpen = () => {\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const path = this.props.location.pathname;\r\n    return (\r\n      <Container fluid style={{ margin: 0, padding: 0 }}>\r\n        <Row>\r\n          <aside\r\n            className={\r\n              this.state.open\r\n                ? \"main-sidebar px-0 open col-12 col-md-3 col-lg-2\"\r\n                : \"main-sidebar px-0 col-12 col-md-3 col-lg-2\"\r\n            }>\r\n            <div className='main-navbar'>\r\n              <nav className='align-items-stretch bg-white flex-md-nowrap border-bottom p-0 navbar navbar-light'>\r\n                <Link\r\n                  href='#'\r\n                  className='w-100 mr-0 navbar-brand'\r\n                  style={{ lineHeight: \"25px\" }}>\r\n                  <div className='d-table m-auto'>\r\n                    <span className='d-md-inline ml-1'>FOS Admin Panel</span>\r\n                  </div>\r\n                </Link>\r\n                <Link\r\n                  href='#'\r\n                  className='toggle-sidebar d-sm-inline d-md-none d-lg-none'\r\n                  onClick={this.handleClose}>\r\n                  <i className='fas fa-times' />\r\n                </Link>\r\n              </nav>\r\n            </div>\r\n            <div className='nav-wrapper'>\r\n              <ul className='nav--no-borders flex-column nav'>\r\n                <li className='nav-item'>\r\n                  <Link\r\n                    className={\r\n                      path === \"/dashboard\" ? \"nav-link active\" : \"nav-link\"\r\n                    }\r\n                    aria-current='page'\r\n                    to='/dashboard'>\r\n                    <div className='d-inline-block item-icon-wrapper'>\r\n                      <i className='fas fa-home' />\r\n                    </div>\r\n                    <span>Dashboard</span>\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className='nav-item'>\r\n                  <Link\r\n                    className={\r\n                      path === \"/dashboard/nutrition-management\" ||\r\n                      path === \"/dashboard/nutrition-management/addNutrition/\"\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    aria-current='page'\r\n                    to='/dashboard/nutrition-management'>\r\n                    <div className='d-inline-block item-icon-wrapper'>\r\n                      <i className='fas fa-address-card' />\r\n                    </div>\r\n                    <span>Nutrition Management</span>\r\n                  </Link>\r\n                </li>\r\n                {/* <li className='nav-item'>\r\n                  <Link\r\n                    className={\r\n                      path === \"/dashboard/restaurant-management\" ||\r\n                      path === \"/dashboard/restaurant-management/edit\" ||\r\n                      path ===\r\n                        \"/dashboard/restaurant-management/:id/editRestaurant\"\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    aria-current='page'\r\n                    to='/dashboard/restaurant-management'>\r\n                    <div className='d-inline-block item-icon-wrapper'>\r\n                      <i className='fas fa-utensils' />\r\n                    </div>\r\n                    <span>Restaurant Management</span>\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className='nav-item'>\r\n                  <Link\r\n                    className={\r\n                      path === \"/dashboard/order-and-delivery\"\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    aria-current='page'\r\n                    to='/dashboard/order-and-delivery'>\r\n                    <div className='d-inline-block item-icon-wrapper'>\r\n                      <i className='fas fa-motorcycle' />\r\n                    </div>\r\n                    <span>Order / Delivery Management</span>\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className='nav-item'>\r\n                  <Link\r\n                    className={\r\n                      path === \"/dashboard/driver-management\"\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    aria-current='page'\r\n                    to='/dashboard/driver-management'>\r\n                    <div className='d-inline-block item-icon-wrapper'>\r\n                      <i className='fas fa-car-side' />\r\n                    </div>\r\n                    <span>Driver Management</span>\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className='nav-item'>\r\n                  <Link\r\n                    className={\r\n                      path === \"/dashboard/finance\"\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    aria-current='page'\r\n                    to='/dashboard/finance'>\r\n                    <div className='d-inline-block item-icon-wrapper'>\r\n                      <i className='fas fa-hand-holding-usd' />\r\n                    </div>\r\n                    <span>Finance Management</span>\r\n                  </Link>\r\n                </li>\r\n            \r\n             */}\r\n              </ul>\r\n            </div>\r\n          </aside>\r\n          <main className='main-content p-0 col-sm-12 col-md-9 offset-md-3 col-lg-10 offset-lg-2'>\r\n            <div className='main-navbar bg-white sticky-top'>\r\n              <div className='p-0 container-fluid d-flex'>\r\n                <nav className='flex-md-nowrap ml-auto p-0 navbar navbar-light'>\r\n                  <nav className='nav'>\r\n                    <div className='logout-btn'>\r\n                      <Button varient='dark' onClick={this.handleLogout}>\r\n                        Logout\r\n                      </Button>\r\n                    </div>\r\n                    <Link\r\n                      href='#'\r\n                      onClick={this.handleOpen}\r\n                      className='nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center'>\r\n                      <i className='fas fa-bars' />\r\n                    </Link>\r\n                  </nav>\r\n                </nav>\r\n              </div>\r\n            </div>\r\n            <div className='main-content-container px-4 container-fluid'>\r\n              <Route\r\n                path={`${this.props.match.path}/nutrition-management`}\r\n                component={AddNutrition}\r\n              />\r\n              {/* <Route\r\n                path={`${this.props.match.path}/order-and-delivery`}\r\n                component={Dashboard}\r\n              />\r\n              <Route\r\n                path={`${this.props.match.path}/driver-management`}\r\n                component={Dashboard}\r\n              />\r\n              <Route path={`/dashboard/finance`} component={Dashboard} />\r\n              <Route\r\n                path={`${this.props.match.path}/admin-management`}\r\n                component={Dashboard}\r\n              />\r\n              <Route exact path={this.props.match.path} component={Dashboard} /> */}\r\n            </div>\r\n          </main>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\nimport \"../landing.css\";\nimport \"react-bootstrap\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./landingPage/login\";\nimport Welcome from \"./landingPage/welcome\";\nimport { isLoggedIn } from \"../services/AdminServices\";\nimport MainLayout from \"./internalpages/mainLayout\";\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isLoggedIn() ? <Component {...props} /> : <Redirect to='/login' />\n    }\n  />\n);\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Route path='/' exact component={Welcome} />\n          <Route path='/login' exact component={Login} />\n          <Route path='/welcome' component={Welcome} />\n          <PrivateRoute path='/dashboard' component={MainLayout} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"react-bootstrap\";\nimport App from \"./components/App.jsx\";\nReactDOM.render( < App / > , document.getElementById(\"root\"));"],"sourceRoot":""}